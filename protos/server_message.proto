// SPDX-License-Identifier: GPL-2.0-or-later
syntax = "proto3";

package protos;
option go_package = ".;protos";

// Used for values with differend default
message OptionalInt32 {
  int32 Value = 1;
}

message Coord {
  float x = 1;
  float y = 2;
  float z = 3;
}

message IntCoord {
  int32 x = 1;
  int32 y = 2;
  int32 z = 3;
}

message Line {
  int32 entity = 1;
  Coord start = 2;
  Coord end = 3;
}

message Explosion2 {
  Coord position = 1;
  int32 start_color = 2;
  int32 stop_color = 3;
}

message Empty {}

message TempEntity {
  oneof union {
    Coord spike = 1;
    Coord super_spike = 2;
    Coord gunshot = 3;
    Coord explosion = 4;
    Coord tar_explosion = 5;
    Line lightning1 = 6;
    Line lightning2 = 7;
    Coord wiz_spike = 8;
    Coord knight_spike = 9;
    Line lightning3 = 10;
    Coord lava_splash = 11;
    Coord teleport = 12;
    Explosion2 explosion2 = 13;
    Line beam = 14;
  }
}

message LightStyle {
  int32 idx = 1;
  string new_style = 2;
}

message Sound {
  OptionalInt32 volume = 1; // byte - default 255
  OptionalInt32 attenuation = 2; // byte - default 64
  int32 entity = 3; // int16
  int32 channel = 4; // byte
  int32 sound_num = 5; // int16
  Coord origin = 6; // float,float,float
}

message UpdateName {
  int32 player = 1;
  string new_name = 2;
}

message UpdateFrags {
  int32 player = 1;
  int32 new_frags = 2;
}

message UpdateColors {
  int32 player = 1;
  int32 new_color = 2;
}

message ClientData {
  OptionalInt32 view_height = 1; // byte, default 22
  int32 ideal_pitch = 2; // byte
  IntCoord punch_angle = 3; // byte
  IntCoord velocity = 4; // byte
  fixed32 items = 5; // uint32 bitfield
  bool on_ground = 6;
  bool in_water = 7;
  int32 weapon_frame = 8; // byte + byte
  int32 armor = 9; // byte + byte
  int32 weapon = 10; // byte + byte, idx of weapon model in model cache
  int32 health = 11; // uint16
  int32 ammo = 12; // byte + byte
  int32 shells = 13; // byte + byte
  int32 nails = 14; // byte + byte
  int32 rockets = 15; // byte + byte
  int32 cells = 16; // byte + byte
  int32 active_weapon = 17; // byte
  int32 weapon_alpha = 18; // byte
}

message Baseline {
  int32 model_index = 1; // byte/uint16
  int32 frame = 2; // byte/uint16
  int32 color_map = 3; // byte, unused
  int32 skin = 4; // byte
  Coord origin = 5;
  Coord angles = 6;
  int32 alpha = 7; // byte
}

message SCmd {
  oneof union {
    // nop = 1 == empty
    bool disconnect = 2;
    
    // UpdateStat update_stat = 3;
    int32 version = 4;
    int32 set_view_entity = 5; // set_view
    Sound sound = 6;
    
    float time = 7;
    string print = 8;
    string stuff_text = 9;
    /*
    SetAngle set_angle = 10;
    ServerInfo server_info = 11;
    */
    LightStyle light_style = 12;
    UpdateName update_name = 13;
    UpdateFrags update_frags = 14;
    /*
    ClientData client_data = 15;
    */
    int32 stop_sound = 16;
    UpdateColors update_colors = 17;
    /*
    Particle particle = 18;
    Damage damage = 19;
    // baseline spawn_static = 20;
    // int32 + baseline spawn_baseline = 22;
    */
    TempEntity temp_entity = 23;
    bool set_pause = 24;
    int32 signon_num = 25;
    string center_print = 26;
    Empty killed_monster = 27;
    Empty found_secret = 28;
    // SpawnStaticSound spawn_static_sound = 29;
    Empty intermission = 30;
    string finale = 31;
    
    // CDTrack cd_track = 32;
    Empty sell_screen = 33;
    string cutscene = 34;
    string skybox = 37;
    Empty bf = 40;
    // Fog fog = 41;
    // int32 + baseline spawn_baseline2 = 42;
    // baseline spawn_static2 = 43;
    // SpawnStaticSound2 spawn_static_sound2 = 44;
  }
}

message ServerMessage {
  repeated SCmd cmds = 1;
}
