// SPDX-License-Identifier: GPL-2.0-or-later
syntax = "proto3";

package protos;
option go_package = ".;protos";

// Used for values with different default
message OptionalInt32 {
  int32 Value = 1;
}

message OptionalFloat {
  float Value = 1;
}

message Coord {
  float x = 1;
  float y = 2;
  float z = 3;
}

message IntCoord {
  int32 x = 1;
  int32 y = 2;
  int32 z = 3;
}

message Line {
  int32 entity = 1;
  Coord start = 2;
  Coord end = 3;
}

message Explosion2 {
  Coord position = 1;
  int32 start_color = 2;
  int32 stop_color = 3;
}

message Empty {}

message TempEntity {
  oneof union {
    Coord spike = 1;
    Coord super_spike = 2;
    Coord gunshot = 3;
    Coord explosion = 4;
    Coord tar_explosion = 5;
    Line lightning1 = 6;
    Line lightning2 = 7;
    Coord wiz_spike = 8;
    Coord knight_spike = 9;
    Line lightning3 = 10;
    Coord lava_splash = 11;
    Coord teleport = 12;
    Explosion2 explosion2 = 13;
    Line beam = 14;
  }
}

message LightStyle {
  int32 idx = 1;
  string new_style = 2;
}

message Sound {
  OptionalInt32 volume = 1; // byte - default 255
  OptionalInt32 attenuation = 2; // byte - default 64
  int32 entity = 3; // int16
  int32 channel = 4; // byte
  int32 sound_num = 5; // int16
  Coord origin = 6; // float,float,float
}

message UpdateName {
  int32 player = 1;
  string new_name = 2;
}

message UpdateFrags {
  int32 player = 1;
  int32 new_frags = 2;
}

message UpdateColors {
  int32 player = 1;
  int32 new_color = 2;
}

message ClientData {
  OptionalInt32 view_height = 1; // byte, default 22
  int32 ideal_pitch = 2; // byte
  IntCoord punch_angle = 3; // byte
  IntCoord velocity = 4; // byte
  fixed32 items = 5; // uint32 bitfield
  bool on_ground = 6;
  bool in_water = 7;
  int32 weapon_frame = 8; // byte + byte
  int32 armor = 9; // byte + byte
  int32 weapon = 10; // byte + byte, idx of weapon model in model cache
  int32 health = 11; // uint16
  int32 ammo = 12; // byte + byte
  int32 shells = 13; // byte + byte
  int32 nails = 14; // byte + byte
  int32 rockets = 15; // byte + byte
  int32 cells = 16; // byte + byte
  int32 active_weapon = 17; // byte
  int32 weapon_alpha = 18; // byte
}

message Baseline {
  int32 model_index = 1; // byte/uint16
  int32 frame = 2; // byte/uint16
  int32 color_map = 3; // byte, unused
  int32 skin = 4; // byte
  Coord origin = 5;
  Coord angles = 6;
  int32 alpha = 7; // byte
}

message EntityBaseline {
  int32 index = 1; // uint16
  Baseline baseline = 2;
}

message ServerInfo {
  int32 protocol = 1; // int32
  int32 flags = 2; // uint32
  int32 max_clients = 3; // byte
  int32 game_type = 4; // byte
  string level_name = 5;
  repeated string model_precache = 6;
  repeated string sound_precache = 7;
}

message EntityUpdate {
  int32 entity = 1;
  bool lerp_move_step = 2; // -- need recheck
  OptionalInt32 model = 3;
  OptionalInt32 frame = 4;
  OptionalInt32 color_map = 5;
  OptionalInt32 skin = 6;
  int32 effects = 7;
  OptionalFloat origin_x = 8;
  OptionalFloat origin_y = 9;
  OptionalFloat origin_z = 10;
  OptionalFloat angle_x = 11;
  OptionalFloat angle_y = 12;
  OptionalFloat angle_z = 13;
  OptionalFloat lerp_finish = 14;
  OptionalInt32 alpha = 15;
  // OptionalInt32 scale = 16; // not used
}

message StaticSound {
  Coord origin = 1;
  int32 index = 2;
  int32 volume = 3;
  int32 attenuation = 4;
}

message Damage {
  int32 armor = 1;
  int32 blood = 2;
  Coord position = 3;
}

message CDTrack {
  int32 track_number = 1;
  int32 loop_track = 2;
}

message UpdateStat {
  int32 stat = 1;
  int32 value = 2;
}

message Particle {
  Coord origin = 1;
  Coord direction = 2;
  int32 count = 3;
  int32 color = 4;
}

message Fog {
  float density = 1;
  float red = 2;
  float green = 3;
  float blue = 4;
  float time = 5;
}

message SCmd {
  oneof union {
    // Empty nop = 1;
    bool disconnect = 2;
    EntityUpdate entity_update = 45;
    
    UpdateStat update_stat = 3; // -- int32, int32 (byte + int32)
    int32 version = 4;
    int32 set_view_entity = 5; // set_view
    Sound sound = 6;
    
    float time = 7;
    string print = 8;
    string stuff_text = 9;

    Coord set_angle = 10;

    ServerInfo server_info = 11;

    LightStyle light_style = 12;
    UpdateName update_name = 13;
    UpdateFrags update_frags = 14;

    ClientData client_data = 15;

    int32 stop_sound = 16;
    UpdateColors update_colors = 17;

    Particle particle = 18; // -- Coord, Coord, int32, int32 ([3]float, [3]int8, int8, int8)
    Damage damage = 19;
    Baseline spawn_static = 20;
    EntityBaseline spawn_baseline = 22;

    TempEntity temp_entity = 23;
    bool set_pause = 24;
    int32 signon_num = 25;
    string center_print = 26;
    Empty killed_monster = 27;
    Empty found_secret = 28;
    StaticSound spawn_static_sound = 29;
    Empty intermission = 30;
    string finale = 31;
    
    CDTrack cd_track = 32; // -- int32, int32 (uint8, uint8)
    Empty sell_screen = 33;
    string cutscene = 34;
    string skybox = 37;
    Empty bf = 40;
    Fog fog = 41;
    // EntityBaseline spawn_baseline2 = 42; -- not needed, covered by spawn_baseline
    // Baseline spawn_static2 = 43; -- not needed, covered by spawn_static
    // SpawnStaticSound2 spawn_static_sound2 = 44; -- not needed, covered by spawn_static_sound
  }
}

message ServerMessage {
  repeated SCmd cmds = 1;
}
